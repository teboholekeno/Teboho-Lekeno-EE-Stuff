;
; Faith Code.asm
;
; Created: 16-Sep-19 4:54:41 PM
; Author : teboho
;

.INCLUDE "M328PDEF.INC"
	.ORG 0x00
	RJMP RESET

	.org INT0addr
	Rjmp GAME_MODE_OR_RESET

RESET:
	.DEF NUMBER = R20
	.DEF STATUS = R23
	.DEF RANDOM_NUMBER = R24  
	.DEF SCORE = R16        
	.DEF GAMES = R21   
	.DEF MODE = R25


	LDI GAMES, 6                        // INITIALIZING THE NUMBER OF GAMES
	SER STATUS                          // SETTING UP THE STATUS REGISTER TO BE FALSE
	CBI DDRC, 0                         // USED TO DETECT THE SIGNAL OF THE ECHO FOR THE ULTRASONIC SENSOR                           
	SBI DDRD, 0							// USED TO ACTIVATE THE TRIGGER OF THE ULTRASONIC SENSOR
	SBI DDRD, 3                         // FOR SWITCHING ON THE ORANGE LED

	// CONTROL FOR THE 1ST SEVEN SEGMENT
	SBI DDRB, 0
	SBI DDRB, 1
	SBI DDRB, 2
	SBI DDRB, 3

	//CONTROL FOR THE 2ND SEVEN SEGMENT
	SBI DDRD, 4	
	SBI DDRD, 5	
	SBI DDRD, 6
	SBI DDRD, 7	

	SBI DDRB, 4                           // DISPLAY THE RED LED  
	SBI DDRB, 5                           // DISPLAY THE GREEN LED

	//SETTING UP THE INTERUPTS  
	ldi r19,(1<<int1)|(1<<int0) ; setting interrupt1 and interrupt0 respectively
	out eimsk, r19
	ldi r19, (1<<isc01)|(1<<isc01)|(1<<isc11)|(1<<isc10) ; INT0 set by HIGH level INT1 set by high rise
	sts eicra, r19
	
	//SETTING UP THE TIMER
	LDI R19, 0B00000001
	STS TCCR0B, R19
	SEI
	
	LDI MODE, 0B0001_0000               //SETTING THE GAME MODE TO INITIALLY START AT THE TEST MODE
	CLR R19

MAIN:
	AA:
	SBRS MODE, 0
	CALL TEST_MODE
	SBRC MODE, 0
	CALL PLAY_MODE
	RJMP MAIN

TEST_MODE:
	CALL SEND_TRIGGER
	CALL CHECK_ECHO_PIN
	CALL SEVEN_SEGMENT_DISPLAY
	RET

PLAY_MODE:
	LDI NUMBER, 0
	CPI GAMES, 1
	BRGE START_ROUND
	CALL DISPLAY_SCORE
	RET

START_ROUND:
	CBI PORTD, 3
	CBI PORTB, 4
	CBI PORTB, 5
	CALL RANDOM_GENERATOR
	CALL RANDOM_SEVEN_SEGMENT_DISPLAY
	CALL A1
PLAY_MODE_:
	CALL SEND_TRIGGER
	CALL CHECK_ECHO_PIN
	RJMP CHECK_EQUALITY
	CALL SEVEN_SEGMENT_DISPLAY
	RJMP PLAY_MODE_

CHECK_ECHO_PIN:                          // THE FUNCTION KEEPS POLLING UNTIL THE ECHO PIN IS ACTIVATED THEN WAIT UNTIL THE ECHO PIN IS DEACTIVATED
	SBIC PINC, 0
	CALL ECHO_ACTIVATED
	SBRC STATUS, 0                       // IF THE STATEMENT EXECUTE LOOP TERMINATE
	RJMP CHECK_ECHO_PIN
	RET 

ECHO_ACTIVATED:                          // THE FUNCTION KEEPS POLLING UNTIL THE ECHO PIN IS DEACTIVATED
	LDI ZL, LOW (0) 
	ECHO_ACTIVATED_INNER:
	INC ZL
	CALL D1
	SBIS PINC, 0
	CALL ECHO_DEACTIVATED
	SBIC PINC, 0
	RJMP ECHO_ACTIVATED_INNER
	RET

ECHO_DEACTIVATED:
	SBRC STATUS, 0
	SUBI STATUS, 0B00000001
	RET
	
SEND_TRIGGER:
	SBI PORTD, 0
	LDI R17, 0B0000_0001
	SBRS STATUS, 0
	ADD STATUS, R17
	CALL D1_
	CBI PORTD, 0 
	RET

RANDOM_GENERATOR:
	CLR R24
	LDS RANDOM_NUMBER, TCNT0
	ANDI RANDOM_NUMBER, 0B00000111
	INC RANDOM_NUMBER
	RET

SELECT_NUMBER:
	CPI ZL, 10
	BRGE PRINT_ZERO
	CPI ZL, 10
	BRLO PRINT_SELECTED
	RET

CHECK_EQUALITY:
	MOV NUMBER, ZL
	CPI NUMBER, 10
	BRLO DECISION
	inc r27
	cpi r27, 2
	breq switch_orange
	RET

DECISION:
	CPI NUMBER, 1
	BRGE FINAL_DECISION
	RET 

FINAL_DECISION:
	CP NUMBER, RANDOM_NUMBER
	BREQ SWITCH_GREEN_LED
	BRNE SWITCH_RED_LED
	RET 

SWITCH_RED_LED: 
	SBI PORTB, 4             
	DEC SCORE
	DEC GAMES
	clr r27
	CALL A1
	RJMP PLAY_MODE

SWITCH_GREEN_LED:
	SBI PORTB, 5                 
	INC SCORE
	INC SCORE
	DEC GAMES
	clr r27
	CALL A1
	RJMP PLAY_MODE

switch_orange:
	SBI PORTD, 3
	DEC GAMES
	clr r27
	CALL A1
	RJMP PLAY_MODE

 PRINT_ZERO: LDI NUMBER, 0 RET
 PRINT_SELECTED: MOV NUMBER, ZL RET

D1_:
	LDI R17, 50 
D2_:
	LDI R18, 50
D3_:
	LDI R19, 150
D4_:
	NOP
	DEC R19
	BRNE D4_
	NOP
	DEC R18
	BRNE D3_
	DEC R17
	BRNE D2_
	RET


D1:
	LDI R17, 1
D2:
	LDI R18, 5
D3:
	LDI R19, 150
D4:
	NOP
	DEC R19
	BRNE D4
	NOP
	DEC R18
	BRNE D3
	DEC R17
	BRNE D2
	RET

A1:
	LDI R17, 200
A2:
	LDI R18, 200
A3:
	LDI R19, 255
A4:
	NOP
	DEC R19
	BRNE A4
	NOP
	DEC R18
	BRNE A3
	DEC R17
	BRNE A2
	RET

SEVEN_SEGMENT_DISPLAY:               
      CALL SELECT_NUMBER
	  OUT PORTB, NUMBER
      RET

RANDOM_SEVEN_SEGMENT_DISPLAY:
	LDI R17, 0B0000_0000
	OUT PORTD, R17
	OUT PORTB, RANDOM_NUMBER
	CBI PORTB, 4
	CBI PORTB, 5
	RET

DISPLAY_SCORE:
	CLR R28
	SBRC SCORE, 7
	CALL NEGATE 
	CALL POSITIVE_NUMBER
	POLL:
	SBRC R28, 0
	SBI PORTB, 4
	SBRS R28, 0
	SBI PORTB, 5
	CALL A1
	CBI PORTB, 4
	CBI PORTB, 5
	RET

NEGATE:
	NEG SCORE
	LDI R28, 0b0000_0001
	RET

POSITIVE_NUMBER:
	CPI SCORE, 10
	BRLO WITHIN_RANGE
	BRGE OUT_OF_RANGE
	RJMP POLL

WITHIN_RANGE:
	OUT PORTB, SCORE
	LDI SCORE, 0B0000_0000
	OUT PORTD, SCORE
	RJMP POLL

OUT_OF_RANGE:
	CPI SCORE, 10
	BREQ PRINT_10
	CPI SCORE, 11
	BREQ PRINT_11
	CPI SCORE, 12
	BREQ PRINT_12
	RJMP POLL

PRINT_10: 
	LDI SCORE, 0B0001_0000
	OUT PORTD, SCORE
	LDI SCORE, 0B0000
	OUT PORTB, SCORE
	RJMP POLL


PRINT_11: 
	LDI SCORE, 0B0001_0000
	OUT PORTD, SCORE
	LDI SCORE, 0B0001
	OUT PORTB, SCORE
	RJMP POLL


PRINT_12: 
	LDI SCORE, 0B0001_0000
	OUT PORTD, SCORE
	LDI SCORE, 0B0010
	OUT PORTB, SCORE
	RJMP POLL

GAME_MODE_OR_RESET:
 SWAP MODE
 SBI PORTB, 4
 RJMP MAIN
RETI

FORMAT:
	LDI GAMES, 6                        // INITIALIZING THE NUMBER OF GAMES
	SER STATUS                          // SETTING UP THE STATUS REGISTER TO BE FALSE
	RET